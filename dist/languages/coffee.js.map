{"version":3,"file":"coffee.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        blockComment: ['###', '###'],\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.coffee',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n    keywords: [\n        'and', 'or', 'is', 'isnt', 'not', 'on', 'yes', '@', 'no', 'off',\n        'true', 'false', 'null', 'this',\n        'new', 'delete', 'typeof', 'in', 'instanceof',\n        'return', 'throw', 'break', 'continue', 'debugger',\n        'if', 'else', 'switch', 'for', 'while', 'do', 'try', 'catch', 'finally',\n        'class', 'extends', 'super',\n        'undefined', 'then', 'unless', 'until', 'loop', 'of', 'by', 'when'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/\\@[a-zA-Z_]\\w*/, 'variable.predefined'],\n            [/[a-zA-Z_]\\w*/, {\n                    cases: {\n                        'this': 'variable.predefined',\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // Comments\n            [/###/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n            // regular expressions\n            ['///', { token: 'regexp', next: '@hereregexp' }],\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\n            [/(\\()(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\=)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\[)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\!)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\&)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\|)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\?)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\{)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\;)(\\s*)(@regEx)/, ['', '', 'regexp']],\n            // delimiters\n            [/}/, {\n                    cases: {\n                        '$S2==interpolatedstring': { token: 'string', next: '@pop' },\n                        '@default': '@brackets'\n                    }\n                }],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\n            [/\\d+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[,.]/, 'delimiter'],\n            // strings:\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\n            [/'''/, 'string', '@herestring.\\'\\'\\''],\n            [/\"/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }],\n            [/'/, {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\\'' }\n                    }\n                }],\n        ],\n        string: [\n            [/[^\"'\\#\\\\]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, {\n                    cases: {\n                        '$S2==\"': { token: 'string', next: 'root.interpolatedstring' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/#/, 'string']\n        ],\n        herestring: [\n            [/(\"\"\"|''')/, {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }],\n            [/[^#\\\\'\"]+/, 'string'],\n            [/['\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\n            [/#/, 'string']\n        ],\n        comment: [\n            [/[^#]+/, 'comment',],\n            [/###/, 'comment', '@pop'],\n            [/#/, 'comment'],\n        ],\n        hereregexp: [\n            [/[^\\\\\\/#]+/, 'regexp'],\n            [/\\\\./, 'regexp'],\n            [/#.*$/, 'comment'],\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\n            [/\\//, 'regexp'],\n        ],\n    },\n};\n"],"names":[],"mappings":"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"}