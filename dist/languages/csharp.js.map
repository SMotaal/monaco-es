{"version":3,"file":"csharp.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/'],\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ],\n    folding: {\n        markers: {\n            start: new RegExp(\"^\\\\s*#region\\\\b\"),\n            end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.cs',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    keywords: [\n        'extern', 'alias', 'using', 'bool', 'decimal', 'sbyte', 'byte', 'short',\n        'ushort', 'int', 'uint', 'long', 'ulong', 'char', 'float', 'double',\n        'object', 'dynamic', 'string', 'assembly', 'is', 'as', 'ref',\n        'out', 'this', 'base', 'new', 'typeof', 'void', 'checked', 'unchecked',\n        'default', 'delegate', 'var', 'const', 'if', 'else', 'switch', 'case',\n        'while', 'do', 'for', 'foreach', 'in', 'break', 'continue', 'goto',\n        'return', 'throw', 'try', 'catch', 'finally', 'lock', 'yield', 'from',\n        'let', 'where', 'join', 'on', 'equals', 'into', 'orderby', 'ascending',\n        'descending', 'select', 'group', 'by', 'namespace', 'partial', 'class',\n        'field', 'event', 'method', 'param', 'property', 'public', 'protected',\n        'internal', 'private', 'abstract', 'sealed', 'static', 'struct', 'readonly',\n        'volatile', 'virtual', 'override', 'params', 'get', 'set', 'add', 'remove',\n        'operator', 'true', 'false', 'implicit', 'explicit', 'interface', 'enum',\n        'null', 'async', 'await', 'fixed', 'sizeof', 'stackalloc', 'unsafe', 'nameof',\n        'when'\n    ],\n    namespaceFollows: [\n        'namespace', 'using',\n    ],\n    parenFollows: [\n        'if', 'for', 'while', 'switch', 'foreach', 'using', 'catch', 'when'\n    ],\n    operators: [\n        '=', '??', '||', '&&', '|', '^', '&', '==', '!=', '<=', '>=', '<<',\n        '+', '-', '*', '/', '%', '!', '~', '++', '--', '+=',\n        '-=', '*=', '/=', '%=', '&=', '|=', '^=', '<<=', '>>=', '>>', '=>'\n    ],\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    // escape sequences\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/\\@?[a-zA-Z_]\\w*/, {\n                    cases: {\n                        '@namespaceFollows': { token: 'keyword.$0', next: '@namespace' },\n                        '@keywords': { token: 'keyword.$0', next: '@qualified' },\n                        '@default': { token: 'identifier', next: '@qualified' }\n                    }\n                }],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/}/, {\n                    cases: {\n                        '$S2==interpolatedstring': { token: 'string.quote', next: '@pop' },\n                        '$S2==litinterpstring': { token: 'string.quote', next: '@pop' },\n                        '@default': '@brackets'\n                    }\n                }],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }],\n            // numbers\n            [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]+/, 'number.hex'],\n            [/0[bB][01_]+/, 'number.hex'],\n            [/[0-9_]+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"/, { token: 'string.quote', next: '@string' }],\n            [/\\$\\@\"/, { token: 'string.quote', next: '@litinterpstring' }],\n            [/\\@\"/, { token: 'string.quote', next: '@litstring' }],\n            [/\\$\"/, { token: 'string.quote', next: '@interpolatedstring' }],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n            [/'/, 'string.invalid']\n        ],\n        qualified: [\n            [/[a-zA-Z_][\\w]*/, {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }],\n            [/\\./, 'delimiter'],\n            ['', '', '@pop'],\n        ],\n        namespace: [\n            { include: '@whitespace' },\n            [/[A-Z]\\w*/, 'namespace'],\n            [/[\\.=]/, 'delimiter'],\n            ['', '', '@pop'],\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/,    'comment', '@push' ],    // no nested comments :-(\n            ['\\\\*/', 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        string: [\n            [/[^\\\\\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        litstring: [\n            [/[^\"]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        litinterpstring: [\n            [/[^\"{]+/, 'string'],\n            [/\"\"/, 'string.escape'],\n            [/{{/, 'string.escape'],\n            [/}}/, 'string.escape'],\n            [/{/, { token: 'string.quote', next: 'root.litinterpstring' }],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        interpolatedstring: [\n            [/[^\\\\\"{]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/{{/, 'string.escape'],\n            [/}}/, 'string.escape'],\n            [/{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\n            [/\"/, { token: 'string.quote', next: '@pop' }]\n        ],\n        whitespace: [\n            [/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, 'directive.csx'],\n            [/^[ \\t\\v\\f]*#\\w.*$/, 'namespace.cpp'],\n            [/[ \\t\\v\\f\\r\\n]+/, ''],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment'],\n        ],\n    },\n};\n"],"names":[],"mappings":"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"}