{"version":3,"file":"xml.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->'],\n    },\n    brackets: [\n        ['<', '>']\n    ],\n    autoClosingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ],\n    surroundingPairs: [\n        { open: '<', close: '>' },\n        { open: '\\'', close: '\\'' },\n        { open: '\"', close: '\"' },\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.xml',\n    ignoreCase: true,\n    // Useful regular expressions\n    qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n    tokenizer: {\n        root: [\n            [/[^<&]+/, ''],\n            { include: '@whitespace' },\n            // Standard opening tag\n            [/(<)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag', next: '@tag' }\n                ]],\n            // Standard closing tag\n            [/(<\\/)(@qualifiedName)(\\s*)(>)/, [\n                    { token: 'delimiter' },\n                    { token: 'tag' },\n                    '',\n                    { token: 'delimiter' }\n                ]],\n            // Meta tags - instruction\n            [/(<\\?)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // Meta tags - declaration\n            [/(<\\!)(@qualifiedName)/, [\n                    { token: 'delimiter' },\n                    { token: 'metatag', next: '@tag' }\n                ]],\n            // CDATA\n            [/<\\!\\[CDATA\\[/, { token: 'delimiter.cdata', next: '@cdata' }],\n            [/&\\w+;/, 'string.escape'],\n        ],\n        cdata: [\n            [/[^\\]]+/, ''],\n            [/\\]\\]>/, { token: 'delimiter.cdata', next: '@pop' }],\n            [/\\]/, '']\n        ],\n        tag: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/, ['attribute.name', '', 'attribute.value']],\n            [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, ['attribute.name', '', 'attribute.value']],\n            [/@qualifiedName/, 'attribute.name'],\n            [/\\?>/, { token: 'delimiter', next: '@pop' }],\n            [/(\\/)(>)/, [\n                    { token: 'tag' },\n                    { token: 'delimiter', next: '@pop' }\n                ]],\n            [/>/, { token: 'delimiter', next: '@pop' }],\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n    },\n};\n"],"names":[],"mappings":"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"}