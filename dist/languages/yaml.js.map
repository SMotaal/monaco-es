{"version":3,"file":"yaml.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/yaml/yaml.js"],"sourcesContent":["export var conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    folding: {\n        offSide: true\n    }\n};\nexport var language = {\n    tokenPostfix: '.yaml',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: ['true', 'True', 'TRUE', 'false', 'False', 'FALSE', 'null', 'Null', 'Null', '~'],\n    numberInteger: /(?:0|[+-]?[0-9]+)/,\n    numberFloat: /(?:0|[+-]?[0-9]+)(?:\\.[0-9]+)?(?:e[-+][1-9][0-9]*)?/,\n    numberOctal: /0o[0-7]+/,\n    numberHex: /0x[0-9a-fA-F]+/,\n    numberInfinity: /[+-]?\\.(?:inf|Inf|INF)/,\n    numberNaN: /\\.(?:nan|Nan|NAN)/,\n    numberDate: /\\d{4}-\\d\\d-\\d\\d([Tt ]\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(( ?[+-]\\d\\d?(:\\d\\d)?)|Z)?)?/,\n    escapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            // Directive\n            [/%[^ ]+.*$/, 'meta.directive'],\n            // Document Markers\n            [/---/, 'operators.directivesEnd'],\n            [/\\.{3}/, 'operators.documentEnd'],\n            // Block Structure Indicators\n            [/[-?:](?= )/, 'operators'],\n            { include: '@anchor' },\n            { include: '@tagHandle' },\n            { include: '@flowCollections' },\n            { include: '@blockStyle' },\n            // Numbers\n            [/@numberInteger(?![ \\t]*\\S+)/, 'number'],\n            [/@numberFloat(?![ \\t]*\\S+)/, 'number.float'],\n            [/@numberOctal(?![ \\t]*\\S+)/, 'number.octal'],\n            [/@numberHex(?![ \\t]*\\S+)/, 'number.hex'],\n            [/@numberInfinity(?![ \\t]*\\S+)/, 'number.infinity'],\n            [/@numberNaN(?![ \\t]*\\S+)/, 'number.nan'],\n            [/@numberDate(?![ \\t]*\\S+)/, 'number.date'],\n            // Key:Value pair\n            [/(\".*?\"|'.*?'|.*?)([ \\t]*)(:)( |$)/, ['type', 'white', 'operators', 'white']],\n            { include: '@flowScalars' },\n            // String nodes\n            [/.+$/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // Flow Collection: Flow Mapping\n        object: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            // Flow Mapping termination\n            [/\\}/, '@brackets', '@pop'],\n            // Flow Mapping delimiter\n            [/,/, 'delimiter.comma'],\n            // Flow Mapping Key:Value delimiter\n            [/:(?= )/, 'operators'],\n            // Flow Mapping Key:Value key\n            [/(?:\".*?\"|'.*?'|[^,\\{\\[]+?)(?=: )/, 'type'],\n            // Start Flow Style\n            { include: '@flowCollections' },\n            { include: '@flowScalars' },\n            // Scalar Data types\n            { include: '@tagHandle' },\n            { include: '@anchor' },\n            { include: '@flowNumber' },\n            // Other value (keyword or string)\n            [/[^\\},]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // Flow Collection: Flow Sequence\n        array: [\n            { include: '@whitespace' },\n            { include: '@comment' },\n            // Flow Sequence termination\n            [/\\]/, '@brackets', '@pop'],\n            // Flow Sequence delimiter\n            [/,/, 'delimiter.comma'],\n            // Start Flow Style\n            { include: '@flowCollections' },\n            { include: '@flowScalars' },\n            // Scalar Data types\n            { include: '@tagHandle' },\n            { include: '@anchor' },\n            { include: '@flowNumber' },\n            // Other value (keyword or string)\n            [/[^\\],]+/, {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // Flow Scalars (quoted strings)\n        string: [\n            [/[^\\\\\"']+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/[\"']/, {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }]\n        ],\n        // First line of a Block Style\n        multiString: [\n            [/^( +).+$/, 'string', '@multiStringContinued.$1']\n        ],\n        // Further lines of a Block Style\n        //   Workaround for indentation detection\n        multiStringContinued: [\n            [/^( *).+$/, {\n                    cases: {\n                        '$1==$S2': 'string',\n                        '@default': { token: '@rematch', next: '@popall' }\n                    }\n                }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white']\n        ],\n        // Only line comments\n        comment: [\n            [/#.*$/, 'comment']\n        ],\n        // Start Flow Collections\n        flowCollections: [\n            [/\\[/, '@brackets', '@array'],\n            [/\\{/, '@brackets', '@object']\n        ],\n        // Start Flow Scalars (quoted strings)\n        flowScalars: [\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', '@string.\\'']\n        ],\n        // Start Block Scalar\n        blockStyle: [\n            [/[>|][0-9]*[+-]?$/, 'operators', '@multiString']\n        ],\n        // Numbers in Flow Collections (terminate with ,]})\n        flowNumber: [\n            [/@numberInteger(?=[ \\t]*[,\\]\\}])/, 'number'],\n            [/@numberFloat(?=[ \\t]*[,\\]\\}])/, 'number.float'],\n            [/@numberOctal(?=[ \\t]*[,\\]\\}])/, 'number.octal'],\n            [/@numberHex(?=[ \\t]*[,\\]\\}])/, 'number.hex'],\n            [/@numberInfinity(?=[ \\t]*[,\\]\\}])/, 'number.infinity'],\n            [/@numberNaN(?=[ \\t]*[,\\]\\}])/, 'number.nan'],\n            [/@numberDate(?=[ \\t]*[,\\]\\}])/, 'number.date']\n        ],\n        tagHandle: [\n            [/\\![^ ]*/, 'tag']\n        ],\n        anchor: [\n            [/[&*][^ ]+/, 'namespace']\n        ]\n    }\n};\n"],"names":[],"mappings":"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"}